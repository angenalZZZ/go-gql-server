scalar Time
# Types
type User {
  id: ID!
  email: String!
  avatarURL: String
  name: String
  firstName: String
  lastName: String
  nickName: String
  description: String
  location: String
  APIkey: String
  profiles: [UserProfile]
  createdAt: Time
  updatedAt: Time
}

type UserProfile {
  id: Int!
  email: String!
  externalUserId: String
  avatarURL: String
  name: String
  firstName: String
  lastName: String
  nickName: String
  description: String
  location: String
  createdAt: Time!
  updatedAt: Time
}

# Input Types
input UserInput {
  email: String
  password: String
  avatarURL: String
  displayName: String
  name: String
  firstName: String
  lastName: String
  nickName: String
  description: String
  location: String
  addRoles: [ID]
  remRoles: [ID]
  addPermissions: [ID]
  remPermissions: [ID]
}

# List Types
type Users {
  count: Int
  list: [User!]!
}

# Define mutations here
type Mutation {
  createUser(input: UserInput!): User!
  updateUser(id: ID!, input: UserInput!): User!
  deleteUser(id: ID!): Boolean!
}

# Define queries here
type Query {
  users(id: ID): Users!
}
